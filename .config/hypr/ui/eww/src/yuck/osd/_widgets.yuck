;;variables
(defpoll greeting :interval "10h" "Misc/scripts/quote")
(defvar volume-level 50)
(defvar volume-muted false)
(defvar brightness-hidden false)
(defvar brightness-level 50)

(defwidget volume-indicator[]
  (revealer
    :transition "slidedown"
    :reveal "${volumereveal}"
    :duration "550ms"
    (box :class "volume-window"
      :orientation "v"
      :space-evenly "false"
      :hexpand "false"
      :vexpand "false"
      (box :class "volume-widget"
        :orientation "h"
        :space-evenly "false"
        :spacing 10
        :hexpand "false"
        :vexpand "false"
        :halign "center"
        (label :text {volume-muted ? "" :
          volume-level == 0 ? "" :
          volume-level < 25 ? "" :
          volume-level < 50 ? "" :
          volume-level < 75 ? "" :
          ""}
          :space-evenly "false"
          :class 'indicator-volume-icon ${volume-muted ? "indicator-volume-icon-muted" : ""}'
        )
        
        (scale :class 'indicator-volume-slider ${volume-muted ? "volume-slider-muted" : ""}'
          :hexpand "true"
          :min 0
          :max 100
          :height 40
          :value volume-level
          :space-evenly "false"
          :hexpand "false"
          :vexpand "false"
          :width 210
        :onchange "amixer set Master {}%")
      )
    )
  )
)

(defwidget brightness-indicator[]
  (revealer
    :transition "slidedown"
    :reveal "${brightnessreveal}"
    :duration "550ms"
    (box :class "brightness-window"
      :orientation "v"
      :space-evenly "false"
      :hexpand "false"
      :vexpand "false"
      (box :class "brightness-widget"
        :orientation "h"
        :space-evenly "false"
        :spacing 10
        :hexpand "false"
        :vexpand "false"
        :halign "center"
        (label :text {brightness-level < 25 ? "󰃞" :
          brightness-level < 50 ? "󰃟" :
          brightness-level < 75 ? "󰃝" :
          "󰃠"}
          :space-evenly "false"
        :class 'indicator-brightness-icon')
        
        (scale :class 'indicator-brightness-slider'
          :hexpand "true"
          :min 0
          :max 100
          :height 40
          :value brightness-level
          :space-evenly "false"
          :hexpand "false"
          :vexpand "false"
          :width 210
        :onchange "brightnessctl s {}%")
      )
    )
  )
)